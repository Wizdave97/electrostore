{"version":3,"sources":["containers/Profile/styles.js","utils/imageResize.js","store/actions/profileActions.js","containers/Profile/Profile.js"],"names":["styles","theme","container","display","profile","width","flexWrap","alignSelf","profileForm","boxSizing","padding","paper","form","logoContainer","& div","margin","transform","& img","height","heading","profileDetails","textField","marginBottom","spacing","unit","button","concat","readFileAsUrl","file","Promise","resolve","fileReader","FileReader","onload","event","target","result","readAsDataURL","imageResize","imageUrl","type","canvas","document","createElement","image","Image","ctx","getContext","clearRect","drawImage","toBlob","blob","src","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","uploadProfileSync","str","data","Profile","state","isUpdate","submitProfileForm","preventDefault","name","getElementById","value","tel","photo","files","then","_this","props","onSubmitProfile","this","setState","userName","_this2","classes","react_default","a","react","index_es","className","noValidate","onSubmit","Logo","alt","variant","color","align","gutterBottom","required","id","label","autoComplete","fullWidth","size","loading","Spinner","uploadingImage","style","imageUploadProgress","error","uploadingImageFail","Fragment","success","react_router","to","item","xs","sm","md","Component","connect","auth","uploadingImageSuccess","dispatch","img","getState","idToken","actionTypes","storageRef","storage","ref","ext","match","metadata","contentType","uploadTask","child","put","on","TaskEvent","STATE_CHANGED","snapshot","progress","bytesTransferred","totalBytes","console","log","getDownloadURL","downloadURL","userId","localId","photoUrl","fetch","method","body","JSON","stringify","response","json","err","actions","withStyles"],"mappings":"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","file":"static/js/9.c27e4350.chunk.js","sourcesContent":["const styles = theme => ({\r\n  container:{\r\n    display:'flex'\r\n  },\r\n  profile:{\r\n    width:'100%',\r\n    display:'flex',\r\n    flexWrap:'wrap',\r\n    alignSelf:'center'\r\n  },\r\n  profileForm:{\r\n    width:'100%',\r\n    display:'flex',\r\n    flexWrap:'wrap',\r\n    boxSizing:'border-box',\r\n    padding:'30px'\r\n  },\r\n  paper:{\r\n    width:'100%',\r\n    display:'flex',\r\n    flexWrap:'wrap',\r\n    padding:'40px',\r\n    boxSizing:'border-box'\r\n  },\r\n  form:{\r\n    display:'flex',\r\n    flexWrap:'wrap',\r\n    width:'100%'\r\n  },\r\n  logoContainer:{\r\n    width:'100%',\r\n    display:'flex',\r\n    padding:'5px',\r\n    boxSizing:'border-box',\r\n    '& div':{\r\n      width:'30%',\r\n      margin:'0 auto',\r\n      transform:'rotate(30deg)',\r\n      '& img':{\r\n        width:'100%',\r\n        height:'auto'\r\n      }\r\n    }\r\n  },\r\n  heading:{\r\n    width:'100%',\r\n    padding:'5px',\r\n    boxSizing:'border-box',\r\n    display:'flex'\r\n  },\r\n  profileDetails:{\r\n    width:'100%',\r\n    display:'flex',\r\n    flexWrap:'wrap',\r\n    boxSizing:'border-box',\r\n  },\r\n  textField:{\r\n    marginBottom:theme.spacing.unit\r\n  },\r\n  button:{\r\n    margin:`${theme.spacing.unit}px auto`\r\n  },\r\n})\r\n\r\nexport default styles\r\n","export const readFileAsUrl = (file) =>{\r\n  return new Promise(resolve=>{\r\n    const fileReader=new FileReader();\r\n    fileReader.onload=(event)=>{\r\n      resolve(event.target.result)\r\n    }\r\n    fileReader.readAsDataURL(file)\r\n  })\r\n}\r\n\r\nexport const imageResize = (imageUrl,type) =>{\r\n  return new Promise(resolve=>{\r\n    let canvas= document.createElement('canvas');\r\n    let maxHeight= 100;\r\n    let image= new Image();\r\n    image.onload=(event)=>{\r\n      const ctx=canvas.getContext('2d');\r\n      if(image.height > maxHeight){\r\n        image.width *= maxHeight/image.height ;\r\n        image.height=maxHeight\r\n      }\r\n      ctx.clearRect(0,0,canvas.width,canvas.height);\r\n      canvas.height=image.height;\r\n      canvas.width=image.width;\r\n      ctx.drawImage(image,0,0,image.width,image.height);\r\n      canvas.toBlob((blob)=>{\r\n        resolve(blob)\r\n      },type)\r\n    }\r\n    image.src=imageUrl;\r\n  })\r\n}\r\n","import firebase from 'firebase';\r\nimport * as actionTypes from './actionTypes';\r\n\r\n\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyArs2eYMjFtvxRpRmYqWexaDuQnd0OLX44\",\r\n  authDomain: \"electrostore-bb2a3.firebaseapp.com\",\r\n  databaseURL: \"https://electrostore-bb2a3.firebaseio.com\",\r\n  projectId: \"electrostore-bb2a3\",\r\n  storageBucket: \"electrostore-bb2a3.appspot.com\",\r\n  messagingSenderId: \"41927039846\",\r\n  appId: \"1:41927039846:web:47b1904dc2ed6b7c\",\r\n};\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nconst uploadProfileSync= (type,str) =>{\r\n  return {\r\n    type:type,\r\n    data:str\r\n  }\r\n}\r\n\r\nexport const uploadProfileInfoAsync = (name,tel,img,type,isUpdate) =>{\r\nreturn (dispatch,getState) =>{\r\n  const idToken=getState().auth.idToken;\r\n\r\n  dispatch(uploadProfileSync(actionTypes.IMAGE_UPLOAD_START, null));\r\n  let file = img\r\n\r\n  // Create a root reference\r\n  var storageRef = firebase.storage().ref();\r\n\r\n  let ext=type.match(/jpe?g|png/g)[0];\r\n  // Create a reference to 'images/mountains.jpg'\r\n\r\n  let metadata = {\r\n    contentType: type\r\n  };\r\n\r\n  // Upload file and metadata to the object 'images/mountains.jpg'\r\n  var uploadTask = storageRef.child('profilePictures/' + name + '.' + ext ).put(file, metadata);\r\n\r\n  // Listen for state changes, errors, and completion of the upload.\r\n  uploadTask.on(firebase.storage.TaskEvent.STATE_CHANGED, // or 'state_changed'\r\n    function(snapshot) {\r\n      // Get task progress, including the number of bytes uploaded and the total number of bytes to be uploaded\r\n      var progress = (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\r\n      console.log('Upload is ' + progress + '% done');\r\n      dispatch(uploadProfileSync(actionTypes.UPLOADING_IMAGE, progress))\r\n    }, function(error) {\r\n      dispatch(uploadProfileSync(actionTypes.IMAGE_UPLOAD_FAIL, null))\r\n\r\n  }, function() {\r\n    // Upload completed successfully, now we can get the download URL\r\n    dispatch(uploadProfileSync(actionTypes.IMAGE_UPLOAD_SUCCESS, null))\r\n    uploadTask.snapshot.ref.getDownloadURL().then(function(downloadURL) {\r\n      const userId=getState().auth.localId;\r\n\r\n      const profile={name:name,userId:userId,tel:tel,photoUrl:downloadURL}\r\n      dispatch(uploadProfileSync(actionTypes.PROFILE_UPLOAD_START,null));\r\n      fetch(`https://electrostore-bb2a3.firebaseio.com/users.json?auth=${idToken}`,{\r\n        method:'POST',\r\n        body:JSON.stringify(profile)\r\n      }).then(response=>response.json()).then(response=>{\r\n        dispatch(uploadProfileSync(actionTypes.PROFILE_UPLOAD_SUCCESS,null));\r\n      }).catch(err=>{\r\n        dispatch(uploadProfileSync(actionTypes.PROFILE_UPLOAD_FAIL,null))\r\n        // Create a reference to the file to delete\r\n        var desertRef = storageRef.child('profilePictures/'+name+'.'+ext);\r\n        // Delete the file\r\n        desertRef.delete().then(function() {\r\n          // File deleted successfully\r\n        }).catch(function(error) {\r\n          // Uh-oh, an error occurred!\r\n        });\r\n      });\r\n    });\r\n  });\r\n}\r\n\r\n}\r\n","import React , { Component, Fragment } from 'react';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { Redirect } from 'react-router-dom';\r\nimport Logo from '../../logo.svg';\r\nimport Spinner from '../../components/Spinner/Spinner';\r\nimport { connect } from 'react-redux';\r\nimport { Grid, Paper, Typography, Button, TextField, } from '@material-ui/core';\r\nimport styles from './styles';\r\nimport { readFileAsUrl, imageResize } from '../../utils/imageResize';\r\nimport * as actions from '../../store/actions/profileActions';\r\n\r\n\r\nclass Profile extends Component {\r\n\r\n  state={\r\n    isUpdate:false\r\n  }\r\n  componentDidMount() {\r\n    this.setState({\r\n      isUpdate:this.props.userName!==null\r\n    })\r\n  }\r\n  submitProfileForm= (event) => {\r\n    event.preventDefault();\r\n    let name=document.getElementById('name').value;\r\n    let tel=document.getElementById('tel').value;\r\n    let photo=document.getElementById('photo').files[0];\r\n    readFileAsUrl(photo).then(imageUrl=>{\r\n      imageResize(imageUrl,photo.type).then(image=>{\r\n        this.props.onSubmitProfile(name,tel,image,photo.type,this.state.isUpdate)\r\n      })\r\n    })\r\n\r\n  }\r\n  render(){\r\n    const { classes } = this.props\r\n    const { isUpdate } = this.state\r\n    let form=(<Fragment>\r\n        <Paper className={classes.paper}>\r\n          <form className={classes.form} noValidate={true} onSubmit={(event)=>this.submitProfileForm(event)}>\r\n            <div className={classes.logoContainer}><div><img src={Logo} alt=\"mob store\"/></div></div>\r\n            <div className={classes.heading}>\r\n              <Typography variant=\"h5\" color=\"secondary\" align=\"center\" gutterBottom>\r\n                {isUpdate?'Update your profile':'Create your profile'}\r\n              </Typography>\r\n            </div>\r\n            <div className={classes.profileDetails}>\r\n              <TextField\r\n                className={classes.textField}\r\n                required\r\n                id='name'\r\n                label=\"Full Name\"\r\n                type=\"text\"\r\n                name=\"name\"\r\n                variant=\"standard\"\r\n                autoComplete=\"name\"\r\n                fullWidth\r\n                margin=\"normal\"\r\n                />\r\n              <TextField\r\n                className={classes.textField}\r\n                required\r\n                id='tel'\r\n                label=\"Telephone Number\"\r\n                type=\"tel\"\r\n                name=\"phone\"\r\n                variant=\"standard\"\r\n                autoComplete=\"tel\"\r\n                fullWidth\r\n                margin=\"normal\"\r\n                />\r\n                <TextField\r\n                  className={classes.textField}\r\n                  required={this.state.isUpdate?true:false}\r\n                  id='photo'\r\n                  label=\"Profile Picture\"\r\n                  type=\"file\"\r\n                  name=\"photo\"\r\n                  variant=\"standard\"\r\n                  fullWidth\r\n                  margin=\"normal\"\r\n                  />\r\n              <Button type='submit' color='secondary' className={classes.button} variant=\"contained\" size=\"medium\">{isUpdate?'Update Profile':'Create Profile'}</Button>\r\n            </div>\r\n          </form>\r\n        </Paper>\r\n    </Fragment>\r\n    )\r\n    let profileForm = form\r\n    if (this.props.loading){\r\n      profileForm=<Spinner/>\r\n    }\r\n    if (this.props.uploadingImage) {\r\n      profileForm=(\r\n        <Typography\r\n          variant=\"body1\"\r\n          color=\"secondary\"\r\n          align=\"center\"\r\n          style={{width:'100%'}}\r\n          gutterBottom>\r\n          Uploading Image {this.props.imageUploadProgress} % done\r\n          </Typography>)\r\n    }\r\n    if (this.props.error || this.props.uploadingImageFail) {\r\n      let errorMessage='An Error Ocurred please retry';\r\n      profileForm=(\r\n        <Fragment>\r\n          <Typography\r\n            variant=\"body1\"\r\n            color=\"error\"\r\n            align=\"center\"\r\n            style={{width:'100%'}}\r\n            gutterBottom>{errorMessage}</Typography>\r\n          {form}\r\n        </Fragment>\r\n      )\r\n      }\r\n\r\n      return (\r\n        <React.Fragment>\r\n          {this.props.success?<Redirect to='/' />:null}\r\n        <Grid item\r\n          className={classes.container}\r\n          xs={11}\r\n          sm={8}\r\n          md={6}>\r\n           <div className={classes.profile}>\r\n               {profileForm}\r\n            </div>\r\n        </Grid>\r\n      </React.Fragment>\r\n      )\r\n    }\r\n\r\n  }\r\n  const mapStateToProps= state =>({\r\n    userName:state.auth.userName,\r\n    loading:state.profile.loading,\r\n    success:state.profile.success,\r\n    error:state.profile.success,\r\n    uploadingImage:state.profile.uploadingImage,\r\n    uploadingImageFail:state.profile.uploadingImageFail,\r\n    uploadingImageSuccess:state.profile.uploadingImageSuccess,\r\n    imageUploadProgress:state.profile.imageUploadProgress\r\n  })\r\n  const mapDispatchToProps = dispatch =>({\r\n    onSubmitProfile: (name,tel,img,type,isUpdate)=>dispatch(actions.uploadProfileInfoAsync(name,tel,img,type,isUpdate))\r\n  })\r\n  export default  connect(mapStateToProps,mapDispatchToProps)(withStyles(styles)(Profile));\r\n"],"sourceRoot":""}